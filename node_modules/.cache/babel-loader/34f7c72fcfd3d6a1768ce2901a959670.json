{"ast":null,"code":"import _classCallCheck from \"/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/src/Graph.js\";\nimport React, { Component } from 'react';\nimport { Scatter } from 'react-chartjs-2';\nimport _ from 'lodash'; //-----------------------------\n//These values were predefined by an electrical engineer, whom I counseled while developing this app.\n\nvar coil_strength = 0.125;\nvar frequency = 50;\nvar time_cycle = 2;\nvar graph_x = 10; //-----------------------------\n\n/**\r\n * Sets the amount of calculated points with defining the precisionStep.\r\n * @type {number}\r\n * */\n\nvar precisionStep = 0.05;\n\nvar Chart =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Chart, _Component);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Chart).call(this, props));\n\n    _this.getFunctionLineCoordinates = function () {\n      return _.range(0, graph_x, precisionStep).map(function (x) {\n        //console.log(`x: ${_.floor(x,3)}, y: ${this.calculate(_.floor(x,3))}`);\n        return {\n          x: _.floor(x, 3),\n          //Rounding down\n          y: _this.calculate(_.floor(x, 3)) //Rounding down\n\n        };\n      });\n    };\n\n    _this.calculate = function (valueOfY) {\n      var rateTime = time_cycle * _this.props.dutyCycle;\n      /**\r\n       * The calculations are based on predefined formulas\r\n       */\n\n      var Il_delta = _this.props.dutyCycle * (1 - _this.props.dutyCycle) * _this.props.voltage / (coil_strength * frequency);\n      var IL_max = _this.props.current * rateTime + Il_delta / 2;\n      var IL_min = _this.props.current * rateTime - Il_delta / 2;\n\n      switch (_this.props.part) {\n        case \"Us in V\":\n          {\n            return valueOfY % time_cycle <= rateTime ? _this.props.voltage : 0;\n          }\n\n        case \"Ul in V\":\n          {\n            return valueOfY % time_cycle <= rateTime ? _this.props.voltage * time_cycle - _this.props.voltage * rateTime : -(_this.props.voltage * rateTime);\n          }\n\n        case \"Ud in V\":\n          {\n            return valueOfY % time_cycle <= rateTime ? 0 : _this.props.voltage;\n          }\n\n        case \"Is in A\":\n          {\n            return valueOfY % time_cycle <= rateTime ? IL_min + IL_max * (valueOfY % time_cycle) : 0;\n          }\n\n        case \"Il in A\":\n          {\n            return valueOfY % time_cycle <= rateTime ? IL_min + IL_max * (valueOfY % time_cycle / rateTime) : IL_min + (IL_max - (valueOfY % time_cycle - rateTime) / (time_cycle - rateTime) * IL_max);\n          }\n\n        case \"Id in A\":\n          {\n            return valueOfY % time_cycle <= rateTime ? 0 : IL_min + IL_max * (time_cycle - valueOfY % time_cycle);\n          }\n\n        default:\n          {\n            console.log(\"Error calculating the y-coordinate.\");\n            return 0;\n          }\n      }\n    };\n\n    _this.state = {\n      time: 0,\n      isSaved: false,\n      scatterChartData: {},\n      savestate: {}\n    };\n    _this.plotGraphs = _this.plotGraphs.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n  /**\r\n   * Computes the (x,y) coordinates according to the precision step\r\n   * @see {calculate}\r\n   */\n\n\n  _createClass(Chart, [{\n    key: \"plotGraphs\",\n\n    /**\r\n     * A Chart.js standard function for plotting the graphs\r\n     */\n    value: function plotGraphs() {\n      var redDot = {\n        label: 'Red Dot',\n        fill: false,\n        backgroundColor: 'rgb(255, 99, 132)',\n        //red\n        borderColor: 'rgb(255, 99, 132)',\n        pointStyle: 'circle',\n        //\"square\", \"cross\", \"none\"\n        pointRadius: 5,\n        data: [{\n          x: this.state.time % 10,\n          y: this.calculate(this.state.time % 10)\n        }]\n      };\n      console.log(\"!!!!!! X: \".concat(this.state.time % 10, \", Y: \").concat(this.calculate(this.state.time % 10)));\n\n      if (this.state.isSaved === false) {\n        //console.log(\"count = 0\");\n        this.setState({\n          isSaved: true\n        });\n        console.log(\"Coordinates saved!!!\");\n        var chartFunction = {\n          lineTension: 0,\n          label: 'Function',\n          fill: false,\n          backgroundColor: 'rgb(54, 162, 235)',\n          //blue\n          borderColor: 'rgb(54, 162, 235)',\n          data: this.getFunctionLineCoordinates()\n        };\n        this.setState({\n          savestate: this.getFunctionLineCoordinates(),\n          scatterChartData: {\n            datasets: [redDot, chartFunction]\n          }\n        });\n      } else {\n        console.log(\"normalrender\");\n        var _chartFunction = {\n          lineTension: 0,\n          label: 'Function',\n          fill: false,\n          backgroundColor: 'rgb(54, 162, 235)',\n          //blue\n          borderColor: 'rgb(54, 162, 235)',\n          data: this.state.savestate\n        };\n        this.setState({\n          scatterChartData: {\n            datasets: [redDot, _chartFunction]\n          }\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.interval = setInterval(function () {\n        return _this2.increment();\n      }, 200);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n      this.setState({\n        isSaved: false\n      });\n    }\n    /**\r\n     * Plots the graphs and updates the @var {time}\r\n     * variable\r\n     */\n\n  }, {\n    key: \"increment\",\n    value: function increment() {\n      this.plotGraphs();\n      this.setState(function (prevState) {\n        return {\n          time: prevState.time + 0.2\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"chart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(Scatter, {\n        data: this.state.scatterChartData,\n        options: {\n          tooltips: {\n            enabled: false\n          },\n          legend: {\n            display: false\n          },\n          animation: {\n            duration: 0 //general animation time. Was: 140\n\n          },\n          hover: {\n            animationDuration: 0 // duration of animations when hovering an item\n\n          },\n          showLines: true,\n          scales: {\n            xAxes: [{\n              scaleLabel: {\n                display: true,\n                labelString: 'Time'\n              },\n              ticks: {\n                maxRotation: 0,\n                beginAtZero: true,\n                userCallback: function userCallback(label, index, labels) {\n                  return null;\n                },\n                min: 0,\n                max: 10\n              }\n            }],\n            yAxes: [{\n              ticks: {},\n              scaleLabel: {\n                display: true,\n                labelString: this.props.part\n              }\n            }]\n          },\n          elements: {\n            point: {\n              radius: 1\n            }\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Chart;\n}(Component);\n\nexport default Chart;","map":{"version":3,"sources":["/mnt/c/Users/Dobo Pal/workspace-spring-tool-suite-4-4.0.0.RELEASE/buck-converter-spring/src/Graph.js"],"names":["React","Component","Scatter","_","coil_strength","frequency","time_cycle","graph_x","precisionStep","Chart","props","getFunctionLineCoordinates","range","map","x","floor","y","calculate","valueOfY","rateTime","dutyCycle","Il_delta","voltage","IL_max","current","IL_min","part","console","log","state","time","isSaved","scatterChartData","savestate","plotGraphs","bind","redDot","label","fill","backgroundColor","borderColor","pointStyle","pointRadius","data","setState","chartFunction","lineTension","datasets","interval","setInterval","increment","clearInterval","prevState","tooltips","enabled","legend","display","animation","duration","hover","animationDuration","showLines","scales","xAxes","scaleLabel","labelString","ticks","maxRotation","beginAtZero","userCallback","index","labels","min","max","yAxes","elements","point","radius"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAIA;AACA;;AAEA,IAAMC,aAAa,GAAG,KAAtB;AACA,IAAMC,SAAS,GAAG,EAAlB;AACA,IAAMC,UAAU,GAAG,CAAnB;AACA,IAAMC,OAAO,GAAG,EAAhB,C,CAEA;;AAEA;;;;;AAIA,IAAMC,aAAa,GAAG,IAAtB;;IAGMC,K;;;;;AAEJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;;AADiB,UAiBnBC,0BAjBmB,GAiBU;AAAA,aAAMR,CAAC,CAACS,KAAF,CAAQ,CAAR,EAAYL,OAAZ,EAAqBC,aAArB,EAAoCK,GAApC,CAAwC,UAAAC,CAAC,EAAK;AAE/E;AACE,eAAO;AACLA,UAAAA,CAAC,EAAEX,CAAC,CAACY,KAAF,CAAQD,CAAR,EAAU,CAAV,CADE;AACY;AACjBE,UAAAA,CAAC,EAAE,MAAKC,SAAL,CAAed,CAAC,CAACY,KAAF,CAAQD,CAAR,EAAU,CAAV,CAAf,CAFE,CAE2B;;AAF3B,SAAP;AAID,OAPgC,CAAN;AAAA,KAjBV;;AAAA,UA8HnBG,SA9HmB,GA8HP,UAACC,QAAD,EAAc;AACxB,UAAIC,QAAQ,GAAGb,UAAU,GAAC,MAAKI,KAAL,CAAWU,SAArC;AAEA;;;;AAGA,UAAIC,QAAQ,GAAI,MAAKX,KAAL,CAAWU,SAAX,IAAsB,IAAE,MAAKV,KAAL,CAAWU,SAAnC,IAA8C,MAAKV,KAAL,CAAWY,OAA1D,IAAoElB,aAAa,GAACC,SAAlF,CAAf;AACA,UAAIkB,MAAM,GAAI,MAAKb,KAAL,CAAWc,OAAX,GAAmBL,QAApB,GAAgCE,QAAQ,GAAC,CAAtD;AACA,UAAII,MAAM,GAAI,MAAKf,KAAL,CAAWc,OAAX,GAAmBL,QAApB,GAAgCE,QAAQ,GAAC,CAAtD;;AAIA,cAAO,MAAKX,KAAL,CAAWgB,IAAlB;AACE,aAAK,SAAL;AAAe;AACb,mBAAUR,QAAQ,GAACZ,UAAV,IAAuBa,QAAxB,GAAoC,MAAKT,KAAL,CAAWY,OAA/C,GAAyD,CAAjE;AAED;;AACD,aAAM,SAAN;AAAgB;AACZ,mBAAUJ,QAAQ,GAACZ,UAAV,IAAuBa,QAAxB,GAAoC,MAAKT,KAAL,CAAWY,OAAX,GAAmBhB,UAApB,GAAiC,MAAKI,KAAL,CAAWY,OAAX,GAAmBH,QAAvF,GAAmG,EAAE,MAAKT,KAAL,CAAWY,OAAX,GAAmBH,QAArB,CAA3G;AAEH;;AACD,aAAK,SAAL;AAAe;AACX,mBAAUD,QAAQ,GAACZ,UAAV,IAAuBa,QAAxB,GAAmC,CAAnC,GAAuC,MAAKT,KAAL,CAAWY,OAA1D;AAEH;;AACD,aAAK,SAAL;AAAe;AACX,mBAAUJ,QAAQ,GAACZ,UAAV,IAAuBa,QAAxB,GAAoCM,MAAM,GAAIF,MAAM,IAAEL,QAAQ,GAACZ,UAAX,CAApD,GAA+E,CAAvF;AAEH;;AACD,aAAM,SAAN;AAAgB;AACZ,mBAAUY,QAAQ,GAACZ,UAAV,IAAuBa,QAAxB,GAAoCM,MAAM,GAAIF,MAAM,IAAGL,QAAQ,GAACZ,UAAV,GAAsBa,QAAxB,CAApD,GAA4FM,MAAM,IAAIF,MAAM,GAAG,CAAEL,QAAQ,GAACZ,UAAV,GAAsBa,QAAvB,KAAkCb,UAAU,GAACa,QAA7C,IAAuDI,MAApE,CAA1G;AAEH;;AACD,aAAK,SAAL;AAAe;AACX,mBAAUL,QAAQ,GAACZ,UAAV,IAAuBa,QAAxB,GAAmC,CAAnC,GAAwCM,MAAM,GAAIF,MAAM,IAAEjB,UAAU,GAAEY,QAAQ,GAACZ,UAAvB,CAAhE;AACH;;AACD;AAAS;AACPqB,YAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,mBAAO,CAAP;AACD;AA3BH;AA6BD,KAvKkB;;AAEjB,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXC,MAAAA,OAAO,EAAG,KAFC;AAGXC,MAAAA,gBAAgB,EAAE,EAHP;AAIXC,MAAAA,SAAS,EAAC;AAJC,KAAb;AAQA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,uDAAlB;AAViB;AAWlB;AAEH;;;;;;;;;AAcA;;;iCAGe;AAEV,UAAMC,MAAM,GAAG;AACbC,QAAAA,KAAK,EAAE,SADM;AAEbC,QAAAA,IAAI,EAAE,KAFO;AAGbC,QAAAA,eAAe,EAAE,mBAHJ;AAGyB;AACtCC,QAAAA,WAAW,EAAE,mBAJA;AAKbC,QAAAA,UAAU,EAAE,QALC;AAKS;AACtBC,QAAAA,WAAW,EAAE,CANA;AASbC,QAAAA,IAAI,EAAE,CAAC;AACL7B,UAAAA,CAAC,EAAE,KAAKe,KAAL,CAAWC,IAAX,GAAgB,EADd;AAELd,UAAAA,CAAC,EAAE,KAAKC,SAAL,CAAe,KAAKY,KAAL,CAAWC,IAAX,GAAgB,EAA/B;AAFE,SAAD;AATO,OAAf;AAcEH,MAAAA,OAAO,CAACC,GAAR,qBAAyB,KAAKC,KAAL,CAAWC,IAAX,GAAgB,EAAzC,kBAAmD,KAAKb,SAAL,CAAe,KAAKY,KAAL,CAAWC,IAAX,GAAgB,EAA/B,CAAnD;;AACD,UAAG,KAAKD,KAAL,CAAWE,OAAX,KAAuB,KAA1B,EAAgC;AAChC;AACA,aAAKa,QAAL,CAAc;AACZb,UAAAA,OAAO,EAAE;AADG,SAAd;AAGAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AAGF,YAAMiB,aAAa,GAAG;AAEpBC,UAAAA,WAAW,EAAG,CAFM;AAGpBT,UAAAA,KAAK,EAAE,UAHa;AAIpBC,UAAAA,IAAI,EAAE,KAJc;AAMpBC,UAAAA,eAAe,EAAE,mBANG;AAMkB;AACtCC,UAAAA,WAAW,EAAE,mBAPO;AAQpBG,UAAAA,IAAI,EAAE,KAAKhC,0BAAL;AARc,SAAtB;AAWA,aAAKiC,QAAL,CAAc;AACZX,UAAAA,SAAS,EAAE,KAAKtB,0BAAL,EADC;AAEZqB,UAAAA,gBAAgB,EAAE;AAChBe,YAAAA,QAAQ,EAAE,CACRX,MADQ,EAERS,aAFQ;AADM;AAFN,SAAd;AAUD,OA7BG,MAgCA;AACFlB,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEF,YAAMiB,cAAa,GAAG;AACpBC,UAAAA,WAAW,EAAG,CADM;AAEpBT,UAAAA,KAAK,EAAE,UAFa;AAGpBC,UAAAA,IAAI,EAAE,KAHc;AAIpBC,UAAAA,eAAe,EAAE,mBAJG;AAIkB;AACtCC,UAAAA,WAAW,EAAE,mBALO;AAMpBG,UAAAA,IAAI,EAAE,KAAKd,KAAL,CAAWI;AANG,SAAtB;AAQA,aAAKW,QAAL,CAAc;AACZZ,UAAAA,gBAAgB,EAAE;AAChBe,YAAAA,QAAQ,EAAE,CACRX,MADQ,EAERS,cAFQ;AADM;AADN,SAAd;AAOG;AAEF;;;wCACmB;AAAA;;AAClB,WAAKG,QAAL,GAAgBC,WAAW,CAAC;AAAA,eAAM,MAAI,CAACC,SAAL,EAAN;AAAA,OAAD,EAAwB,GAAxB,CAA3B;AACH;;;2CAEsB;AACrBC,MAAAA,aAAa,CAAC,KAAKH,QAAN,CAAb;AACA,WAAKJ,QAAL,CAAc;AACZb,QAAAA,OAAO,EAAE;AADG,OAAd;AAGD;AAED;;;;;;;gCAIY;AAEV,WAAKG,UAAL;AAEA,WAAKU,QAAL,CAAc,UAAAQ,SAAS;AAAA,eAAK;AAC1BtB,UAAAA,IAAI,EAAEsB,SAAS,CAACtB,IAAV,GAAiB;AADG,SAAL;AAAA,OAAvB;AAKD;;;6BA8CU;AAEP,aACE;AAAK,QAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,OAAD;AAAS,QAAA,IAAI,EAAI,KAAKD,KAAL,CAAWG,gBAA5B;AACA,QAAA,OAAO,EACL;AACEqB,UAAAA,QAAQ,EAAE;AACRC,YAAAA,OAAO,EAAE;AADD,WADZ;AAIEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,OAAO,EAAE;AADH,WAJV;AAOEC,UAAAA,SAAS,EAAE;AACTC,YAAAA,QAAQ,EAAE,CADD,CACG;;AADH,WAPb;AAUEC,UAAAA,KAAK,EAAE;AACLC,YAAAA,iBAAiB,EAAE,CADd,CACgB;;AADhB,WAVT;AAaEC,UAAAA,SAAS,EAAE,IAbb;AAcEC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE,CAAC;AACNC,cAAAA,UAAU,EAAE;AACVR,gBAAAA,OAAO,EAAE,IADC;AAEVS,gBAAAA,WAAW,EAAE;AAFH,eADN;AAKNC,cAAAA,KAAK,EAAC;AACJC,gBAAAA,WAAW,EAAE,CADT;AAEHC,gBAAAA,WAAW,EAAE,IAFV;AAGHC,gBAAAA,YAAY,EAAE,sBAAShC,KAAT,EAAgBiC,KAAhB,EAAuBC,MAAvB,EAA+B;AAC3C,yBAAO,IAAP;AACD,iBALE;AAMHC,gBAAAA,GAAG,EAAC,CAND;AAOJC,gBAAAA,GAAG,EAAC;AAPA;AALA,aAAD,CADD;AAgBNC,YAAAA,KAAK,EAAE,CAAC;AACNR,cAAAA,KAAK,EAAE,EADD;AAENF,cAAAA,UAAU,EAAE;AACVR,gBAAAA,OAAO,EAAE,IADC;AAEVS,gBAAAA,WAAW,EAAE,KAAKvD,KAAL,CAAWgB;AAFd;AAFN,aAAD;AAhBD,WAdV;AAsCEiD,UAAAA,QAAQ,EAAE;AACRC,YAAAA,KAAK,EAAE;AACLC,cAAAA,MAAM,EAAE;AADH;AADC;AAtCZ,SAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADF;AAoDD;;;;EAlOiB5E,S;;AAqOpB,eAAeQ,KAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {Scatter} from 'react-chartjs-2';\r\nimport _ from 'lodash';\r\n\r\n\r\n\r\n//-----------------------------\r\n//These values were predefined by an electrical engineer, whom I counseled while developing this app.\r\n\r\nconst coil_strength = 0.125;\r\nconst frequency = 50;\r\nconst time_cycle = 2;\r\nconst graph_x = 10;\r\n\r\n//-----------------------------\r\n\r\n/**\r\n * Sets the amount of calculated points with defining the precisionStep.\r\n * @type {number}\r\n * */\r\nconst precisionStep = 0.05;\r\n\r\n\r\nclass Chart extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      time: 0,\r\n      isSaved : false,\r\n      scatterChartData: {},\r\n      savestate:{},\r\n    };\r\n\r\n\r\n    this.plotGraphs = this.plotGraphs.bind(this);\r\n  }\r\n\r\n/**\r\n * Computes the (x,y) coordinates according to the precision step\r\n * @see {calculate}\r\n */\r\n  getFunctionLineCoordinates = () => _.range(0 , graph_x, precisionStep).map(x =>  {\r\n\r\n    //console.log(`x: ${_.floor(x,3)}, y: ${this.calculate(_.floor(x,3))}`);\r\n      return {\r\n        x: _.floor(x,3), //Rounding down\r\n        y: this.calculate(_.floor(x,3)) //Rounding down\r\n      }\r\n    })\r\n\r\n  \r\n/**\r\n * A Chart.js standard function for plotting the graphs\r\n */\r\n  plotGraphs() {\r\n\r\n     const redDot = {\r\n       label: 'Red Dot',\r\n       fill: false,\r\n       backgroundColor: 'rgb(255, 99, 132)', //red\r\n       borderColor: 'rgb(255, 99, 132)',\r\n       pointStyle: 'circle', //\"square\", \"cross\", \"none\"\r\n       pointRadius: 5,\r\n\r\n\r\n       data: [{\r\n         x: this.state.time%10,\r\n         y: this.calculate(this.state.time%10)\r\n       }]}\r\n\r\n       console.log(`!!!!!! X: ${this.state.time%10}, Y: ${this.calculate(this.state.time%10)}`)\r\n      if(this.state.isSaved === false){\r\n      //console.log(\"count = 0\");\r\n      this.setState({\r\n        isSaved: true\r\n      });\r\n      console.log(\"Coordinates saved!!!\");\r\n\r\n\r\n    const chartFunction = {\r\n\r\n      lineTension : 0,\r\n      label: 'Function',\r\n      fill: false,\r\n\r\n      backgroundColor: 'rgb(54, 162, 235)', //blue\r\n      borderColor: 'rgb(54, 162, 235)',\r\n      data: this.getFunctionLineCoordinates()\r\n    };\r\n\r\n    this.setState({\r\n      savestate: this.getFunctionLineCoordinates(),\r\n      scatterChartData: {\r\n        datasets: [\r\n          redDot,\r\n          chartFunction,\r\n\r\n        ]\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  else{\r\n    console.log(\"normalrender\");\r\n\r\n  const chartFunction = {\r\n    lineTension : 0,\r\n    label: 'Function',\r\n    fill: false,\r\n    backgroundColor: 'rgb(54, 162, 235)', //blue\r\n    borderColor: 'rgb(54, 162, 235)',\r\n    data: this.state.savestate\r\n  };\r\n  this.setState({\r\n    scatterChartData: {\r\n      datasets: [\r\n        redDot,\r\n        chartFunction,\r\n      ]\r\n    }\r\n  })}\r\n\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.increment(),200)\r\n}\r\n\r\ncomponentWillUnmount() {\r\n  clearInterval(this.interval);\r\n  this.setState({\r\n    isSaved: false\r\n  });\r\n}\r\n\r\n/**\r\n * Plots the graphs and updates the @var {time}\r\n * variable\r\n */\r\nincrement() {\r\n  \r\n  this.plotGraphs();\r\n\r\n  this.setState(prevState => ({\r\n    time: prevState.time + 0.2\r\n  }));\r\n\r\n\r\n}\r\n\r\n  calculate = (valueOfY) => {\r\n    var rateTime = time_cycle*this.props.dutyCycle;\r\n\r\n    /**\r\n     * The calculations are based on predefined formulas\r\n     */\r\n    var Il_delta = (this.props.dutyCycle*(1-this.props.dutyCycle)*this.props.voltage)/(coil_strength*frequency);\r\n    var IL_max = (this.props.current*rateTime) +(Il_delta/2)\r\n    var IL_min = (this.props.current*rateTime) -(Il_delta/2)\r\n\r\n\r\n\r\n    switch(this.props.part){\r\n      case \"Us in V\":{\r\n        return  ((valueOfY%time_cycle)<=rateTime)?  this.props.voltage : 0;\r\n\r\n      }\r\n      case  \"Ul in V\":{\r\n          return  ((valueOfY%time_cycle)<=rateTime)? (this.props.voltage*time_cycle)-(this.props.voltage*rateTime) : -(this.props.voltage*rateTime);\r\n\r\n      }\r\n      case \"Ud in V\":{\r\n          return  ((valueOfY%time_cycle)<=rateTime)? 0 : this.props.voltage  ;\r\n\r\n      }\r\n      case \"Is in A\":{\r\n          return (((valueOfY%time_cycle)<=rateTime)? (IL_min + (IL_max*(valueOfY%time_cycle))) : 0);\r\n\r\n      }\r\n      case  \"Il in A\":{\r\n          return (((valueOfY%time_cycle)<=rateTime)? (IL_min + (IL_max*((valueOfY%time_cycle)/rateTime))) : ( IL_min + (IL_max-((((valueOfY%time_cycle)-rateTime)/(time_cycle-rateTime)*IL_max)))));\r\n\r\n      }\r\n      case \"Id in A\":{\r\n          return (((valueOfY%time_cycle)<=rateTime)? 0 : (IL_min + (IL_max*(time_cycle-(valueOfY%time_cycle)))));\r\n      }\r\n      default: {\r\n        console.log(\"Error calculating the y-coordinate.\");\r\n        return 0;\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className = \"chart\" >\r\n      <Scatter data = {this.state.scatterChartData}\r\n      options = {\r\n        {\r\n          tooltips: {\r\n            enabled: false\r\n          },\r\n          legend: {\r\n            display: false\r\n        },\r\n          animation: {\r\n            duration: 0 //general animation time. Was: 140\r\n          },\r\n          hover: {\r\n            animationDuration: 0 // duration of animations when hovering an item\r\n        },\r\n          showLines: true,\r\n          scales: {\r\n            xAxes: [{\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: 'Time'\r\n              },\r\n              ticks:{\r\n                maxRotation: 0,\r\n                 beginAtZero: true,\r\n                 userCallback: function(label, index, labels) {\r\n                   return null;\r\n                 },\r\n                 min:0,\r\n                max:10,\r\n              },\r\n            }],\r\n            yAxes: [{\r\n              ticks: {},\r\n              scaleLabel: {\r\n                display: true,\r\n                labelString: this.props.part\r\n              }\r\n            }]\r\n          },\r\n          elements: {\r\n            point: {\r\n              radius: 1\r\n            }\r\n          }\r\n        }\r\n      }\r\n      />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n"]},"metadata":{},"sourceType":"module"}